diff -Naur xen/docs/man/xl.pod.1 xen-a/docs/man/xl.pod.1
--- xen/docs/man/xl.pod.1	2013-08-20 06:35:04.570332341 -0600
+++ xen-a/docs/man/xl.pod.1	2013-08-20 07:10:32.481332341 -0600
@@ -391,6 +391,26 @@
 
 Print huge (!) amount of debug during the migration process.
 
+=item B<--max_iters> I<number>
+
+Number of iterations before final suspend (default: 30)
+
+=item B<--max_factor> I<factor>
+
+Max amount of memory to transfer before final suspend (default: 3*RAM)
+
+=item B<--min_remaining>
+
+Number of remaining dirty pages. If the number of dirty pages drops that 
+low the guest is suspended and the remaing pages are transfered to <host>.
+
+=item B<--abort_if_busy>
+
+Abort migration instead of doing final suspend/transfer/resume if the
+guest has still dirty pages after the number of iterations and/or the
+amount of RAM transferred. This avoids long periods of time where the
+guest is suspended.
+
 =back
 
 =item B<remus> [I<OPTIONS>] I<domain-id> I<host>
diff -Naur xen/tools/libxc/xc_domain_save.c xen-a/tools/libxc/xc_domain_save.c
--- xen/tools/libxc/xc_domain_save.c	2013-08-20 06:35:06.211332341 -0600
+++ xen-a/tools/libxc/xc_domain_save.c	2013-08-20 07:10:32.548332341 -0600
@@ -43,6 +43,7 @@
 */
 #define DEF_MAX_ITERS   29   /* limit us to 30 times round loop   */
 #define DEF_MAX_FACTOR   3   /* never send more than 3x p2m_size  */
+#define DEF_MIN_REMAINING 50 /* low water mark of dirty pages */
 
 struct save_ctx {
     unsigned long hvirt_start; /* virtual starting address of the hypervisor */
@@ -801,7 +802,7 @@
 }
 
 int xc_domain_save(xc_interface *xch, int io_fd, uint32_t dom, uint32_t max_iters,
-                   uint32_t max_factor, uint32_t flags,
+                   uint32_t max_factor, uint32_t min_remaining, uint32_t flags,
                    struct save_callbacks* callbacks, int hvm,
                    unsigned long vm_generationid_addr)
 {
@@ -811,6 +812,7 @@
     int rc = 1, frc, i, j, last_iter = 0, iter = 0;
     int live  = (flags & XCFLAGS_LIVE);
     int debug = (flags & XCFLAGS_DEBUG);
+    int abort_if_busy = (flags & XCFLAGS_DOMSAVE_ABORT_IF_BUSY);
     int superpages = !!hvm;
     int race = 0, sent_last_iter, skip_this_iter = 0;
     unsigned int sent_this_iter = 0;
@@ -911,6 +913,7 @@
     /* If no explicit control parameters given, use defaults */
     max_iters  = max_iters  ? : DEF_MAX_ITERS;
     max_factor = max_factor ? : DEF_MAX_FACTOR;
+    min_remaining = min_remaining ? : DEF_MIN_REMAINING;
 
     if ( !get_platform_info(xch, dom,
                             &ctx->max_mfn, &ctx->hvirt_start, &ctx->pt_levels, &dinfo->guest_width) )
@@ -1534,10 +1537,21 @@
 
         if ( live )
         {
+            int min_reached = sent_this_iter + skip_this_iter < min_remaining;
             if ( (iter >= max_iters) ||
-                 (sent_this_iter+skip_this_iter < 50) ||
+                 min_reached ||
                  (total_sent > dinfo->p2m_size*max_factor) )
             {
+                if ( !min_reached && abort_if_busy )
+                {
+                    ERROR("Live migration aborted, as requested. (guest too busy?)"
+                     " total_sent %lu iter %d, max_iters %u max_factor %u",
+                      total_sent, iter, max_iters, max_factor);
+                    print_stats(xch, dom, sent_this_iter, &time_stats, &shadow_stats, 1);
+                    rc = 1;
+                    goto out;
+                }
+
                 DPRINTF("Start last iteration\n");
                 last_iter = 1;
 
diff -Naur xen/tools/libxc/xc_nomigrate.c xen-a/tools/libxc/xc_nomigrate.c
--- xen/tools/libxc/xc_nomigrate.c	2013-08-20 06:35:06.248332341 -0600
+++ xen-a/tools/libxc/xc_nomigrate.c	2013-08-20 07:10:32.575332341 -0600
@@ -22,7 +22,7 @@
 #include <xenguest.h>
 
 int xc_domain_save(xc_interface *xch, int io_fd, uint32_t dom, uint32_t max_iters,
-                   uint32_t max_factor, uint32_t flags,
+                   uint32_t max_factor, uint32_t min_remaining, uint32_t flags,
                    struct save_callbacks* callbacks, int hvm,
                    unsigned long vm_generationid_addr)
 {
diff -Naur xen/tools/libxc/xc_private.h xen-a/tools/libxc/xc_private.h
--- xen/tools/libxc/xc_private.h	2013-08-20 06:35:06.253332341 -0600
+++ xen-a/tools/libxc/xc_private.h	2013-08-20 07:10:32.609332341 -0600
@@ -119,6 +119,7 @@
 
 /* anamorphic macros:  struct xc_interface *xch  must be in scope */
 
+#define WPRINTF(_f, _a...) xc_report(xch, xch->error_handler, XTL_WARN,0, _f , ## _a)
 #define IPRINTF(_f, _a...) xc_report(xch, xch->error_handler, XTL_INFO,0, _f , ## _a)
 #define DPRINTF(_f, _a...) xc_report(xch, xch->error_handler, XTL_DETAIL,0, _f , ## _a)
 #define DBGPRINTF(_f, _a...) xc_report(xch, xch->error_handler, XTL_DEBUG,0, _f , ## _a)
diff -Naur xen/tools/libxc/xenguest.h xen-a/tools/libxc/xenguest.h
--- xen/tools/libxc/xenguest.h	2013-08-20 06:35:06.255332341 -0600
+++ xen-a/tools/libxc/xenguest.h	2013-08-20 07:10:32.627332341 -0600
@@ -28,6 +28,8 @@
 #define XCFLAGS_HVM       (1 << 2)
 #define XCFLAGS_STDVGA    (1 << 3)
 #define XCFLAGS_CHECKPOINT_COMPRESS    (1 << 4)
+#define XCFLAGS_DOMSAVE_ABORT_IF_BUSY  (1 << 5)
+#define XCFLAGS_PROGRESS  (1 << 6)
 
 #define X86_64_B_SIZE   64 
 #define X86_32_B_SIZE   32
@@ -85,7 +87,7 @@
  * @return 0 on success, -1 on failure
  */
 int xc_domain_save(xc_interface *xch, int io_fd, uint32_t dom, uint32_t max_iters,
-                   uint32_t max_factor, uint32_t flags /* XCFLAGS_xxx */,
+                   uint32_t max_factor, uint32_t min_remaining, uint32_t flags /* XCFLAGS_xxx */,
                    struct save_callbacks* callbacks, int hvm,
                    unsigned long vm_generationid_addr);
 
diff -Naur xen/tools/libxl/libxl.c xen-a/tools/libxl/libxl.c
--- xen/tools/libxl/libxl.c	2013-08-20 06:35:06.333332341 -0600
+++ xen-a/tools/libxl/libxl.c	2013-08-20 07:10:32.678332341 -0600
@@ -757,7 +757,8 @@
 
 }
 
-int libxl_domain_suspend(libxl_ctx *ctx, uint32_t domid, int fd, int flags,
+int libxl_domain_suspend(libxl_ctx *ctx, uint32_t domid, int fd,
+                         const libxl_domain_suspend_properties *props,
                          const libxl_asyncop_how *ao_how)
 {
     AO_CREATE(ctx, domid, ao_how);
@@ -778,8 +779,14 @@
     dss->domid = domid;
     dss->fd = fd;
     dss->type = type;
-    dss->live = flags & LIBXL_SUSPEND_LIVE;
-    dss->debug = flags & LIBXL_SUSPEND_DEBUG;
+    if (props) {
+        dss->live = props->flags & LIBXL_SUSPEND_LIVE;
+        dss->debug = props->flags & LIBXL_SUSPEND_DEBUG;
+        dss->max_iters = props->max_iters;
+        dss->max_factor = props->max_factor;
+        dss->min_remaining = props->min_remaining;
+        dss->xlflags = props->flags;
+    }
 
     libxl__domain_suspend(egc, dss);
     return AO_INPROGRESS;
diff -Naur xen/tools/libxl/libxl.h xen-a/tools/libxl/libxl.h
--- xen/tools/libxl/libxl.h	2013-08-20 06:35:06.333332341 -0600
+++ xen-a/tools/libxl/libxl.h	2013-08-20 07:10:32.712332341 -0600
@@ -578,12 +578,32 @@
 void libxl_domain_config_init(libxl_domain_config *d_config);
 void libxl_domain_config_dispose(libxl_domain_config *d_config);
 
+typedef struct {
+    int flags; /* LIBXL_SUSPEND_* */
+    int max_iters;
+    int max_factor;
+    int min_remaining;
+} libxl_domain_suspend_properties;
+
 int libxl_domain_suspend(libxl_ctx *ctx, uint32_t domid, int fd,
-                         int flags, /* LIBXL_SUSPEND_* */
+                         const libxl_domain_suspend_properties *props, /* optional */
                          const libxl_asyncop_how *ao_how)
                          LIBXL_EXTERNAL_CALLERS_ONLY;
+#ifdef LIBXL_API_VERSION
+#if LIBXL_API_VERSION == 0x040200
+static inline int libxl_domain_suspend_0x040200(libxl_ctx *ctx, uint32_t domid, int fd,
+                          int flags, const libxl_asyncop_how *ao_how)
+{
+    libxl_domain_suspend_properties props = { .flags = flags };
+    return libxl_domain_suspend(ctx, domid, fd, &props, ao_how);
+}
+#define libxl_domain_suspend libxl_domain_suspend_0x040200
+#endif
+#endif
+
 #define LIBXL_SUSPEND_DEBUG 1
 #define LIBXL_SUSPEND_LIVE 2
+#define LIBXL_SUSPEND_ABORT_IF_BUSY 4
 
 /* @param suspend_cancel [from xenctrl.h:xc_domain_resume( @param fast )]
  *   If this parameter is true, use co-operative resume. The guest
diff -Naur xen/tools/libxl/libxl_dom.c xen-a/tools/libxl/libxl_dom.c
--- xen/tools/libxl/libxl_dom.c	2013-08-20 06:35:06.351332341 -0600
+++ xen-a/tools/libxl/libxl_dom.c	2013-08-20 07:10:32.732332341 -0600
@@ -1306,6 +1306,7 @@
 
     dss->xcflags = (live ? XCFLAGS_LIVE : 0)
           | (debug ? XCFLAGS_DEBUG : 0)
+          | (dss->xlflags & LIBXL_SUSPEND_ABORT_IF_BUSY ? XCFLAGS_DOMSAVE_ABORT_IF_BUSY : 0)
           | (dss->hvm ? XCFLAGS_HVM : 0);
 
     dss->suspend_eventchn = -1;
diff -Naur xen/tools/libxl/libxl_internal.h xen-a/tools/libxl/libxl_internal.h
--- xen/tools/libxl/libxl_internal.h	2013-08-20 06:35:06.353332341 -0600
+++ xen-a/tools/libxl/libxl_internal.h	2013-08-20 07:10:32.738332341 -0600
@@ -2257,6 +2257,10 @@
     xc_evtchn *xce; /* event channel handle */
     int suspend_eventchn;
     int hvm;
+    int max_iters;
+    int max_factor;
+    int min_remaining;
+    int xlflags;
     int xcflags;
     int guest_responded;
     const char *dm_savefile;
diff -Naur xen/tools/libxl/libxl_save_callout.c xen-a/tools/libxl/libxl_save_callout.c
--- xen/tools/libxl/libxl_save_callout.c	2013-08-20 06:35:06.356332341 -0600
+++ xen-a/tools/libxl/libxl_save_callout.c	2013-08-20 07:10:32.745332341 -0600
@@ -108,8 +108,9 @@
     }
 
     const unsigned long argnums[] = {
-        dss->domid, 0, 0, dss->xcflags, dss->hvm, vm_generationid_addr,
-        toolstack_data_fd, toolstack_data_len,
+        dss->domid, dss->max_iters, dss->max_factor, dss->min_remaining,
+        dss->xcflags, dss->hvm,
+        vm_generationid_addr, toolstack_data_fd, toolstack_data_len,
         cbflags,
     };
 
diff -Naur xen/tools/libxl/libxl_save_helper.c xen-a/tools/libxl/libxl_save_helper.c
--- xen/tools/libxl/libxl_save_helper.c	2013-08-20 06:35:06.357332341 -0600
+++ xen-a/tools/libxl/libxl_save_helper.c	2013-08-20 07:10:32.759332341 -0600
@@ -221,6 +221,7 @@
         uint32_t dom =             strtoul(NEXTARG,0,10);
         uint32_t max_iters =       strtoul(NEXTARG,0,10);
         uint32_t max_factor =      strtoul(NEXTARG,0,10);
+        uint32_t min_remaining =   strtoul(NEXTARG,0,10);
         uint32_t flags =           strtoul(NEXTARG,0,10);
         int hvm =                  atoi(NEXTARG);
         unsigned long genidad =    strtoul(NEXTARG,0,10);
@@ -235,8 +236,8 @@
         helper_setcallbacks_save(&helper_save_callbacks, cbflags);
 
         startup("save");
-        r = xc_domain_save(xch, io_fd, dom, max_iters, max_factor, flags,
-                           &helper_save_callbacks, hvm, genidad);
+        r = xc_domain_save(xch, io_fd, dom, max_iters, max_factor, min_remaining,
+                           flags, &helper_save_callbacks, hvm, genidad);
         complete(r);
 
     } else if (!strcmp(mode,"--restore-domain")) {
diff -Naur xen/tools/libxl/xl_cmdimpl.c xen-a/tools/libxl/xl_cmdimpl.c
--- xen/tools/libxl/xl_cmdimpl.c	2013-08-20 06:35:06.366332341 -0600
+++ xen-a/tools/libxl/xl_cmdimpl.c	2013-08-20 07:10:32.770332341 -0600
@@ -3307,7 +3307,7 @@
 
     save_domain_core_writeconfig(fd, filename, config_data, config_len);
 
-    int rc = libxl_domain_suspend(ctx, domid, fd, 0, NULL);
+    int rc = libxl_domain_suspend(ctx, domid, fd, NULL, NULL);
     close(fd);
 
     if (rc < 0) {
@@ -3471,6 +3471,8 @@
 }
 
 static void migrate_domain(uint32_t domid, const char *rune, int debug,
+                           int max_iters, int max_factor,
+                           int min_remaining, int abort_if_busy,
                            const char *override_config_file)
 {
     pid_t child = -1;
@@ -3479,7 +3481,13 @@
     char *away_domname;
     char rc_buf;
     uint8_t *config_data;
-    int config_len, flags = LIBXL_SUSPEND_LIVE;
+    int config_len;
+    libxl_domain_suspend_properties props = {
+        .flags = LIBXL_SUSPEND_LIVE,
+        .max_iters = max_iters,
+        .max_factor = max_factor,
+        .min_remaining = min_remaining,
+    };
 
     save_domain_core_begin(domid, override_config_file,
                            &config_data, &config_len);
@@ -3498,8 +3506,11 @@
     xtl_stdiostream_adjust_flags(logger, XTL_STDIOSTREAM_HIDE_PROGRESS, 0);
 
     if (debug)
-        flags |= LIBXL_SUSPEND_DEBUG;
-    rc = libxl_domain_suspend(ctx, domid, send_fd, flags, NULL);
+        props.flags |= LIBXL_SUSPEND_DEBUG;
+    if (abort_if_busy)
+        props.flags |= LIBXL_SUSPEND_ABORT_IF_BUSY;
+
+    rc = libxl_domain_suspend(ctx, domid, send_fd, &props, NULL);
     if (rc) {
         fprintf(stderr, "migration sender: libxl_domain_suspend failed"
                 " (rc=%d)\n", rc);
@@ -3896,13 +3907,18 @@
     char *rune = NULL;
     char *host;
     int opt, daemonize = 1, monitor = 1, debug = 0;
+    int max_iters = 0, max_factor = 0, min_remaining = 0, abort_if_busy = 0;
     static struct option opts[] = {
         {"debug", 0, 0, 0x100},
+        {"max_iters", 1, 0, 0x101},
+        {"max_factor", 1, 0, 0x102},
+        {"min_remaining", 1, 0, 0x103},
+        {"abort_if_busy", 0, 0, 0x104},
         COMMON_LONG_OPTS,
         {0, 0, 0, 0}
     };
 
-    SWITCH_FOREACH_OPT(opt, "FC:s:e", opts, "migrate", 2) {
+    SWITCH_FOREACH_OPT(opt, "FC:s:eM:m:A", opts, "migrate", 2) {
     case 'C':
         config_filename = optarg;
         break;
@@ -3919,6 +3935,18 @@
     case 0x100:
         debug = 1;
         break;
+    case 0x101:
+        max_iters = atoi(optarg);
+        break;
+    case 0x102:
+        max_factor = atoi(optarg);
+        break;
+    case 0x103:
+        min_remaining = atoi(optarg);
+        break;
+    case 0x104:
+        abort_if_busy = 1;
+        break;
     }
 
     domid = find_domain(argv[optind]);
@@ -3934,7 +3962,8 @@
             return 1;
     }
 
-    migrate_domain(domid, rune, debug, config_filename);
+    migrate_domain(domid, rune, debug, max_iters, max_factor, min_remaining,
+                   abort_if_busy, config_filename);
     return 0;
 }
 
diff -Naur xen/tools/libxl/xl_cmdtable.c xen-a/tools/libxl/xl_cmdtable.c
--- xen/tools/libxl/xl_cmdtable.c	2013-08-20 06:35:06.366332341 -0600
+++ xen-a/tools/libxl/xl_cmdtable.c	2013-08-20 07:10:32.788332341 -0600
@@ -149,14 +149,19 @@
       &main_migrate, 0, 1,
       "Migrate a domain to another host",
       "[options] <Domain> <host>",
-      "-h              Print this help.\n"
-      "-C <config>     Send <config> instead of config file from creation.\n"
-      "-s <sshcommand> Use <sshcommand> instead of ssh.  String will be passed\n"
-      "                to sh. If empty, run <host> instead of ssh <host> xl\n"
-      "                migrate-receive [-d -e]\n"
-      "-e              Do not wait in the background (on <host>) for the death\n"
-      "                of the domain.\n"
-      "--debug         Print huge (!) amount of debug during the migration process."
+      "-h                      Print this help.\n"
+      "-C <config>             Send <config> instead of config file from creation.\n"
+      "-s <sshcommand>         Use <sshcommand> instead of ssh.  String will be passed\n"
+      "                        to sh. If empty, run <host> instead of ssh <host> xl\n"
+      "                        migrate-receive [-d -e]\n"
+      "-e                      Do not wait in the background (on <host>) for the death\n"
+      "                        of the domain.\n"
+      "--debug                 Print huge (!) amount of debug during the migration process.\n"
+      "--max_iters <number>    Number of iterations before final suspend (default: 30)\n"
+      "--max_factor <factor>   Max amount of memory to transfer before final suspend (default: 3*RAM).\n"
+      "--min_remaining <pages> Number of remaining dirty pages before final suspend (default: 50).\n"
+      "--abort_if_busy         Abort migration instead of doing final suspend, if number\n"
+      "                        of iterations or amount of transfered memory is exceeded."
     },
     { "dump-core",
       &main_dump_core, 0, 1,
diff -Naur xen/tools/python/xen/lowlevel/checkpoint/libcheckpoint.c xen-a/tools/python/xen/lowlevel/checkpoint/libcheckpoint.c
--- xen/tools/python/xen/lowlevel/checkpoint/libcheckpoint.c	2013-08-20 06:35:06.601332341 -0600
+++ xen-a/tools/python/xen/lowlevel/checkpoint/libcheckpoint.c	2013-08-20 07:10:32.806332341 -0600
@@ -206,7 +206,7 @@
 
     callbacks->switch_qemu_logdirty = noop_switch_logdirty;
 
-    rc = xc_domain_save(s->xch, fd, s->domid, 0, 0, flags, callbacks, hvm,
+    rc = xc_domain_save(s->xch, fd, s->domid, 0, 0, 0, flags, callbacks, hvm,
                         vm_generationid_addr);
 
     if (hvm)
diff -Naur xen/tools/python/xen/xend/XendCheckpoint.py xen-a/tools/python/xen/xend/XendCheckpoint.py
--- xen/tools/python/xen/xend/XendCheckpoint.py	2013-08-20 06:35:06.747332341 -0600
+++ xen-a/tools/python/xen/xend/XendCheckpoint.py	2013-08-20 07:10:32.825332341 -0600
@@ -118,9 +118,25 @@
         # enabled. Passing "0" simply uses the defaults compiled into
         # libxenguest; see the comments and/or code in xc_linux_save() for
         # more information.
+        max_iters = dominfo.info.get('max_iters', "0")
+        max_factor = dominfo.info.get('max_factor', "0")
+        min_remaining = dominfo.info.get('min_remaining', "0")
+        abort_if_busy = dominfo.info.get('abort_if_busy', "0")
+        log_save_progress = dominfo.info.get('log_save_progress', "0")
+        if max_iters == "None":
+            max_iters = "0"
+        if max_factor == "None":
+            max_factor = "0"
+        if min_remaining == "None":
+            min_remaining = "0"
+        if abort_if_busy == "None":
+            abort_if_busy = "0"
+        if log_save_progress == "None":
+            log_save_progress = "0"
         cmd = [xen.util.auxbin.pathTo(XC_SAVE), str(fd),
-               str(dominfo.getDomid()), "0", "0", 
-               str(int(live) | (int(hvm) << 2)) ]
+               str(dominfo.getDomid()),
+               max_iters, max_factor, min_remaining,
+               str( int(live) | (int(hvm) << 2) | (int(abort_if_busy) << 5) | (int(log_save_progress) << 6) ) ]
         log.debug("[xc_save]: %s", string.join(cmd))
 
         def saveInputHandler(line, tochild):
@@ -249,9 +265,6 @@
     store_port   = dominfo.getStorePort()
     console_port = dominfo.getConsolePort()
 
-    assert store_port
-    assert console_port
-
     # if hvm, pass mem size to calculate the store_mfn
     if is_hvm:
         apic = int(dominfo.info['platform'].get('apic', 0))
@@ -263,6 +276,9 @@
         pae  = 0
 
     try:
+        assert store_port
+        assert console_port
+
         restore_image = image.create(dominfo, dominfo.info)
         memory = restore_image.getRequiredAvailableMemory(
             dominfo.info['memory_dynamic_max'] / 1024)
diff -Naur xen/tools/python/xen/xend/XendDomain.py xen-a/tools/python/xen/xend/XendDomain.py
--- xen/tools/python/xen/xend/XendDomain.py	2013-08-20 06:35:06.750332341 -0600
+++ xen-a/tools/python/xen/xend/XendDomain.py	2013-08-20 07:10:32.854332341 -0600
@@ -1832,6 +1832,20 @@
             log.exception(ex)
             raise XendError(str(ex))
 
+    def domain_migrate_constraints_set(self, domid, max_iters, max_factor, min_remaining, abort_if_busy, log_save_progress):
+        """Set the Migrate Constraints of this domain.
+        @param domid: Domain ID or Name
+        @param max_iters: Number of iterations before final suspend
+        @param max_factor: Max amount of memory to transfer before final suspend
+        @param min_remaining: Number of dirty pages before final suspend
+        @param abort_if_busy: Abort migration instead of doing final suspend
+        @param log_save_progress: Log progress of migrate to xend.log
+        """
+        dominfo = self.domain_lookup_nr(domid)
+        if not dominfo:
+            raise XendInvalidDomain(str(domid))
+        dominfo.setMigrateConstraints(max_iters, max_factor, min_remaining, abort_if_busy, log_save_progress)
+
     def domain_maxmem_set(self, domid, mem):
         """Set the memory limit for a domain.
 
diff -Naur xen/tools/python/xen/xend/XendDomainInfo.py xen-a/tools/python/xen/xend/XendDomainInfo.py
--- xen/tools/python/xen/xend/XendDomainInfo.py	2013-08-20 06:35:06.751332341 -0600
+++ xen-a/tools/python/xen/xend/XendDomainInfo.py	2013-08-20 07:10:32.865332341 -0600
@@ -1459,6 +1459,22 @@
         pci_conf = self.info['devices'][dev_uuid][1]
         return map(pci_dict_to_bdf_str, pci_conf['devs'])
 
+    def setMigrateConstraints(self, max_iters, max_factor, min_remaining, abort_if_busy, log_save_progress):
+        """Set the Migrate Constraints of this domain.
+        @param max_iters: Number of iterations before final suspend
+        @param max_factor: Max amount of memory to transfer before final suspend
+        @param min_remaining: Number of dirty pages before final suspend
+        @param abort_if_busy: Abort migration instead of doing final suspend
+        @param log_save_progress: Log progress of migrate to xend.log
+        """
+        log.debug("Setting migration constraints of domain %s (%s) to '%s' '%s' '%s' '%s'.",
+                  self.info['name_label'], str(self.domid), max_iters, max_factor, min_remaining, abort_if_busy)
+        self.info['max_iters'] = str(max_iters)
+        self.info['max_factor'] = str(max_factor)
+        self.info['min_remaining'] = str(min_remaining)
+        self.info['abort_if_busy'] = str(abort_if_busy)
+        self.info['log_save_progress'] = str(log_save_progress)
+
     def setMemoryTarget(self, target):
         """Set the memory target of this domain.
         @param target: In MiB.
diff -Naur xen/tools/python/xen/xm/migrate.py xen-a/tools/python/xen/xm/migrate.py
--- xen/tools/python/xen/xm/migrate.py	2013-08-20 06:35:06.844332341 -0600
+++ xen-a/tools/python/xen/xm/migrate.py	2013-08-20 07:10:32.885332341 -0600
@@ -55,6 +55,26 @@
           fn=set_true, default=0,
           use="Change home server for managed domains.")
 
+gopts.opt('max_iters',val='max_iters',
+          fn=set_int, default=0,
+          use="Number of iterations before final suspend (default: 30).")
+
+gopts.opt('max_factor', val='max_factor',
+          fn=set_int, default=0,
+          use="Max amount of memory to transfer before final suspend (default: 3*RAM).")
+
+gopts.opt('min_remaining', val='min_remaining',
+          fn=set_int, default=0,
+          use="Number of dirty pages before final suspend (default: 50).")
+
+gopts.opt('abort_if_busy',
+          fn=set_true, default=0,
+          use="Abort migration instead of doing final suspend.")
+
+gopts.opt('log_progress',
+          fn=set_true, default=0,
+          use="Log progress of migration to xend.log")
+
 def help():
     return str(gopts)
     
@@ -80,6 +100,12 @@
         server.xenapi.VM.migrate(vm_ref, dst, bool(opts.vals.live),
                                  other_config)
     else:
+        server.xend.domain.migrate_constraints_set(dom,
+                                                   opts.vals.max_iters,
+                                                   opts.vals.max_factor,
+                                                   opts.vals.min_remaining,
+                                                   opts.vals.abort_if_busy,
+                                                   opts.vals.log_progress)
         server.xend.domain.migrate(dom, dst, opts.vals.live,
                                    opts.vals.port,
                                    opts.vals.node,
diff -Naur xen/tools/xcutils/xc_restore.c xen-a/tools/xcutils/xc_restore.c
--- xen/tools/xcutils/xc_restore.c	2013-08-20 06:35:06.930332341 -0600
+++ xen-a/tools/xcutils/xc_restore.c	2013-08-20 07:10:32.922332341 -0600
@@ -56,6 +56,7 @@
 
     if ( ret == 0 )
     {
+        /* xend expects this output, part of protocol */
 	printf("store-mfn %li\n", store_mfn);
         if ( !hvm )
             printf("console-mfn %li\n", console_mfn);
diff -Naur xen/tools/xcutils/xc_save.c xen-a/tools/xcutils/xc_save.c
--- xen/tools/xcutils/xc_save.c	2013-08-20 06:35:06.930332341 -0600
+++ xen-a/tools/xcutils/xc_save.c	2013-08-20 07:10:32.957332341 -0600
@@ -7,6 +7,8 @@
  *
  */
 
+#define _GNU_SOURCE
+#include <unistd.h>
 #include <err.h>
 #include <stdlib.h>
 #include <stdint.h>
@@ -19,6 +21,7 @@
 #include <fcntl.h>
 #include <err.h>
 
+#include <xc_private.h>
 #include <xenstore.h>
 #include <xenctrl.h>
 #include <xenguest.h>
@@ -51,16 +54,17 @@
  * receive the acknowledgement from the subscribe event channel. */
 static int evtchn_suspend(void)
 {
+    xc_interface *xch = si.xch;
     int rc;
 
     rc = xc_evtchn_notify(si.xce, si.suspend_evtchn);
     if (rc < 0) {
-        warnx("failed to notify suspend request channel: %d", rc);
+        WPRINTF("failed to notify suspend request channel: %d", rc);
         return 0;
     }
 
-    if (xc_await_suspend(si.xch, si.xce, si.suspend_evtchn) < 0) {
-        warnx("suspend failed");
+    if (xc_await_suspend(xch, si.xce, si.suspend_evtchn) < 0) {
+        WPRINTF("suspend failed");
         return 0;
     }
 
@@ -104,61 +108,69 @@
 
 static int switch_qemu_logdirty(int domid, unsigned int enable, void *data)
 {
+    xc_interface *xch = si.xch;
     struct xs_handle *xs;
-    char *path, *p, *ret_str, *cmd_str, **watch;
+    char *path, *dir_p, *ret_str, **watch;
+    const char *cmd_str;
     unsigned int len;
+    int ret, again;
     struct timeval tv;
     fd_set fdset;
 
-    if ((xs = xs_daemon_open()) == NULL)
-        errx(1, "Couldn't contact xenstore");
-    if (!(path = strdup("/local/domain/0/device-model/")))
-        errx(1, "can't get domain path in store");
-    if (!(path = realloc(path, strlen(path) 
-                         + 10 
-                         + strlen("/logdirty/cmd") + 1)))
-        errx(1, "no memory for constructing xenstore path");
-    snprintf(path + strlen(path), 11, "%i", domid);
-    strcat(path, "/logdirty/");
-    p = path + strlen(path);
+    if ((xs = xs_daemon_open()) == NULL) {
+        PERROR("Couldn't contact xenstore");
+        exit(1);
+    }
 
+    ret = asprintf(&path, "/local/domain/0/device-model/%i/logdirty/ret", domid);
+    if (ret < 0) {
+        ERROR("Couldn't construct xenstore path");
+        exit(1);
+    }
+    /* Pointer to directory */
+    dir_p = path + ret - 3;
 
     /* Watch for qemu's return value */
-    strcpy(p, "ret");
-    if (!xs_watch(xs, path, "qemu-logdirty-ret"))
-        errx(1, "can't set watch in store (%s)\n", path);
-
-    if (!(cmd_str = strdup( enable == 0 ? "disable" : "enable")))
-        errx(1, "can't get logdirty cmd path in store");
-
-    /* Tell qemu that we want it to start logging dirty page to Xen */
-    strcpy(p, "cmd");
-    if (!xs_write(xs, XBT_NULL, path, cmd_str, strlen(cmd_str)))
-        errx(1, "can't write  to store path (%s)\n",
-             path);
-
-    /* Wait a while for qemu to signal that it has service logdirty command */
- read_again:
-    tv.tv_sec = 5;
-    tv.tv_usec = 0;
-    FD_ZERO(&fdset);
-    FD_SET(xs_fileno(xs), &fdset);
-
-    if ((select(xs_fileno(xs) + 1, &fdset, NULL, NULL, &tv)) != 1)
-        errx(1, "timed out waiting for qemu logdirty response.\n");
-
-    watch = xs_read_watch(xs, &len);
-    free(watch);
-
-    strcpy(p, "ret");
-    ret_str = xs_read(xs, XBT_NULL, path, &len);
-    if (ret_str == NULL || strcmp(ret_str, cmd_str))
+    if (!xs_watch(xs, path, "qemu-logdirty-ret")) {
+        PERROR("can't set watch in store (%s)", path);
+        exit(1);
+    }
+
+    cmd_str = enable ? "enable" : "disable";
+
+    /* Tell qemu that we want it to start logging dirty pages to Xen */
+    strcpy(dir_p, "cmd");
+    if (!xs_write(xs, XBT_NULL, path, cmd_str, strlen(cmd_str))) {
+        PERROR("can't write to store path (%s)", path);
+        exit(1);
+    }
+
+    /* Restore initial path */
+    strcpy(dir_p, "ret");
+    /* Wait a while for qemu to signal that it has serviced logdirty command */
+    do {
+        tv.tv_sec = 5;
+        tv.tv_usec = 0;
+        FD_ZERO(&fdset);
+        FD_SET(xs_fileno(xs), &fdset);
+        errno = 0;
+
+        if ((select(xs_fileno(xs) + 1, &fdset, NULL, NULL, &tv)) != 1) {
+            PERROR("timed out waiting for qemu logdirty response.");
+            exit(1);
+        }
+    
+        watch = xs_read_watch(xs, &len);
+        free(watch);
+    
+        ret_str = xs_read(xs, XBT_NULL, path, &len);
+        again = ret_str == NULL || strcmp(ret_str, cmd_str);
+        DPRINTF("Got '%s' from logdirty%s.\n", ret_str, again ? ", retrying" : "");
+        free(ret_str);
         /* Watch fired but value is not yet right */
-        goto read_again;
+    } while (again);
 
     free(path);
-    free(cmd_str);
-    free(ret_str);
 
     return 0;
 }
@@ -166,53 +178,56 @@
 int
 main(int argc, char **argv)
 {
-    unsigned int maxit, max_f, lflags;
+    xc_interface *xch;
+    unsigned int maxit, max_f, min_r, lflags;
     int io_fd, ret, port;
     struct save_callbacks callbacks;
     xentoollog_level lvl;
     xentoollog_logger *l;
 
-    if (argc != 6)
-        errx(1, "usage: %s iofd domid maxit maxf flags", argv[0]);
+    if (argc != 7)
+        errx(1, "usage: %s iofd domid maxit maxf minr flags", argv[0]);
 
     io_fd = atoi(argv[1]);
     si.domid = atoi(argv[2]);
     maxit = atoi(argv[3]);
     max_f = atoi(argv[4]);
-    si.flags = atoi(argv[5]);
+    min_r = atoi(argv[5]);
+    si.flags = atoi(argv[6]);
 
     si.suspend_evtchn = -1;
 
     lvl = si.flags & XCFLAGS_DEBUG ? XTL_DEBUG: XTL_DETAIL;
-    lflags = XTL_STDIOSTREAM_SHOW_PID | XTL_STDIOSTREAM_HIDE_PROGRESS;
+    lflags = XTL_STDIOSTREAM_SHOW_PID;
+    lflags |= si.flags & XCFLAGS_PROGRESS ? 0 : XTL_STDIOSTREAM_HIDE_PROGRESS;
     l = (xentoollog_logger *)xtl_createlogger_stdiostream(stderr, lvl, lflags);
-    si.xch = xc_interface_open(l, 0, 0);
+    xch = si.xch = xc_interface_open(l, 0, 0);
     if (!si.xch)
-        errx(1, "failed to open control interface");
+        errx(1, "[%lu] failed to open control interface", (unsigned long)getpid());
 
     si.xce = xc_evtchn_open(NULL, 0);
     if (si.xce == NULL)
-        warnx("failed to open event channel handle");
+        WPRINTF("failed to open event channel handle");
     else
     {
         port = xs_suspend_evtchn_port(si.domid);
 
         if (port < 0)
-            warnx("failed to get the suspend evtchn port\n");
+            WPRINTF("failed to get the suspend evtchn port\n");
         else
         {
             si.suspend_evtchn =
               xc_suspend_evtchn_init(si.xch, si.xce, si.domid, port);
 
             if (si.suspend_evtchn < 0)
-                warnx("suspend event channel initialization failed, "
+                WPRINTF("suspend event channel initialization failed, "
                        "using slow path");
         }
     }
     memset(&callbacks, 0, sizeof(callbacks));
     callbacks.suspend = suspend;
     callbacks.switch_qemu_logdirty = switch_qemu_logdirty;
-    ret = xc_domain_save(si.xch, io_fd, si.domid, maxit, max_f, si.flags, 
+    ret = xc_domain_save(si.xch, io_fd, si.domid, maxit, max_f, min_r, si.flags, 
                          &callbacks, !!(si.flags & XCFLAGS_HVM), 0);
 
     if (si.suspend_evtchn > 0)
diff -Naur xen/xen/arch/x86/mm/mem_event.c xen-a/xen/arch/x86/mm/mem_event.c
--- xen/xen/arch/x86/mm/mem_event.c	2013-08-20 06:35:09.407332341 -0600
+++ xen-a/xen/arch/x86/mm/mem_event.c	2013-08-20 07:10:32.980332341 -0600
@@ -502,6 +502,7 @@
 {
     int rc;
 
+    printk("%s(%u) %u\n", __func__, __LINE__, d->domain_id);
     rc = xsm_mem_event_control(XSM_PRIV, d, mec->mode, mec->op);
     if ( rc )
         return rc;
@@ -536,6 +537,7 @@
         struct mem_event_domain *med = &d->mem_event->paging;
         rc = -EINVAL;
 
+    printk("%s(%u) %u\n", __func__, __LINE__, d->domain_id);
         switch( mec->op )
         {
         case XEN_DOMCTL_MEM_EVENT_OP_PAGING_ENABLE:
@@ -581,6 +583,7 @@
         struct mem_event_domain *med = &d->mem_event->access;
         rc = -EINVAL;
 
+    printk("%s(%u) %u\n", __func__, __LINE__, d->domain_id);
         switch( mec->op )
         {
         case XEN_DOMCTL_MEM_EVENT_OP_ACCESS_ENABLE:
@@ -619,6 +622,7 @@
         struct mem_event_domain *med = &d->mem_event->share;
         rc = -EINVAL;
 
+    printk("%s(%u) %u\n", __func__, __LINE__, d->domain_id);
         switch( mec->op )
         {
         case XEN_DOMCTL_MEM_EVENT_OP_SHARING_ENABLE:
@@ -649,6 +653,7 @@
     break;
 
     default:
+    printk("%s(%u) %u\n", __func__, __LINE__, d->domain_id);
         rc = -ENOSYS;
     }
 
diff -Naur xen/xen/common/domain.c xen-a/xen/common/domain.c
--- xen/xen/common/domain.c	2013-08-20 06:35:09.584332341 -0600
+++ xen-a/xen/common/domain.c	2013-08-20 07:10:32.982332341 -0600
@@ -312,6 +312,10 @@
         spin_unlock(&domlist_update_lock);
     }
 
+    if (d->domain_id == DOMID_COW) {
+	    WARN_ON(1);
+	    d = (struct domain *)0x4242ULL;
+    }
     return d;
 
  fail:
